// User Registration Techniques
Flow org.gluu.agama.registration.phiwallet
     Basepath ""
     Timeout 3000 seconds
     Configs conf
// Create  variable for UI feedback
uiFeedback = {}
uiFeedback.errorMessage = ""
emailObj = {}
sendMail = true
uiInput = {matches: true, resent: false}
// Iterate x times max
maxJourney = Repeat 6 times max
     // Retrieve user profile  from UI
     userInput = RRF "profile.ftlh" uiFeedback
     // create an instance of Registration service
     userRegistrationService = Call org.gluu.agama.user.UserRegistration#getInstance conf
     // Assign userName, email and password  to a variable
     email = userInput.mail
     userName = userInput.uid
     referralCode = userInput.referralCode
     residenceCountry = userInput.residenceCountry
     phone = userInput.phoneNumber
     // language attribute taking from User input
     language = userInput.language
     // sent sms otp
     smsOtpSend = Call userRegistrationService sendOTPCode phone
     // The OTP Code has been send to user.
     Log "@info OTP generated and send to: " phone
     otpValidationResult = false
     maxSMS = Repeat 4 times max
          //  Show UI to collect OTP code from user.
          otpCreds = RRF "smsOtp.ftlh" uiFeedback
          When otpCreds.hasRequestedNewCode is "yes"
               // Log new code request
               Log "@info User has requested a new code."
               // Resend otp
               resendHasSucceed = Call userRegistrationService sendOTPCode phone
               When resendHasSucceed is null
                    Log "@info Fail to resend new code to user. " resendHasSucceed
                    // Provide feedback about the otp resend error to user.
                    uiFeedback.infoMessage = "Error occurs while sending new code to you. Please contact site administrator."
               // Log code resend
               Log "@info New OTP code send successfully!" resendHasSucceed
               // Provide feedback about the error message to user.
               uiFeedback.errorMessage = "A new OTP code has been send to you on your mobile phone."
          Otherwise
               //  Add log entry with collected code in log file.
               Log "@info Information provided by the user is : " otpCreds.code
               //  Validate the OTP code provided by the user.
               otpValidationResult = Call userRegistrationService validateOTPCode phone otpCreds.code
               // Add log entry withvalidation result in log file.
               Log "@info OTP validation result is:" otpValidationResult
               When otpValidationResult is true
                    Log "@info OTP validated Successfully"
                    uiFeedback.errorMessage = null
                    // check user name policy
                    isUsernamePolicyMatch = Call userRegistrationService usernamePolicyMatch userName
                    // if username policy match
                    When isUsernamePolicyMatch is true
                         // Check user already exist or not with mail
                         user = Call userRegistrationService getUserEntityByMail email
                         // If user not found
                         When user.empty is true
                              // Check user already exist or not with username
                              userWithUid = Call userRegistrationService getUserEntityByUsername userName
                              // user not found
                              When userWithUid.empty is true
                                   // Retrieve user password from UI
                                   passwordInput = RRF "password.ftlh" uiFeedback
                                   // Assign  password  to a variable
                                   userPassword = passwordInput.userPassword
                                   confirmPassword = passwordInput.confirmPassword
                                   // Password policy check
                                   isPasswordPolicyMatch = Call userRegistrationService passwordPolicyMatch userPassword
                                   // if password policy match
                                   When isPasswordPolicyMatch is true
                                        // Matching password 
                                        When userPassword is confirmPassword
                                             Log "@info Send-Email-page-trigger"
                                             // sent Email otp
                                             otpCode = Call userRegistrationService sendEmail email
                                             // The OTP Code has been send to user.
                                             Log "@info OTP generated and send to: " email
                                             EmailOtpValidationResult = false
                                             EmailMax = Repeat 4 times max
                                                  // "Email OTP verification loop Started"
                                                  Log "@info Email OTP verification loop Started"
                                                  uiFeedback.email = email
                                                  uiFeedback.matches = true
                                                  //  Show UI to collect OTP code from user.
                                                  emailOtpCreds = RRF "emailOtp.ftlh" uiFeedback
                                                  When emailOtpCreds.resend is "yes"
                                                       Log "@info User has requested a new code."
                                                       // Resend Email otp
                                                       otpCode = Call userRegistrationService sendEmail email
                                                       When otpCode is null
                                                            Log "@info Fail to resend new code to user. " otpCode
                                                            // Provide feedback about the otp resend error to user.
                                                            uiFeedback.infoMessage = "Error occurs while sending new code to you. Please contact site administrator."
                                                       // Log code resend
                                                       Log "@info New OTP code send successfully!" otpCode
                                                       // Provide feedback about the error message to user.
                                                       uiFeedback.errorMessage = "A new OTP code has been send to you on your Email"
                                                  Otherwise
                                                       //  Add log entry with collected code in log file.
                                                       Log "@info Password provided by the user " 
                                                       When emailOtpCreds.passcode is otpCode
                                                            Log "@info Email Otp Verified"
                                                            EmailOtpValidationResult = true
                                                            Log "@info E-mail verification passed, initiating user provisioning flow " userInput
                                                            inum | E = Call userRegistrationService addNewUser userInput passwordInput
                                                            // If user registration success
                                                            When inum is not null
                                                                 // Show user creation log
                                                                 Log "@info User % has been created" inum
                                                                 // Show acknowledgement UI page for successful registration
                                                                 acknowledgementInput = RRF "acknowledgement.ftlh" 
                                                                 // Finish the flow successfully
                                                                 Log "@info Finish the flow successfully"
                                                                 // Finish the flow successfully
                                                                 Finish userName
                                                            // Registration failed log
                                                            Log "@info User registration failed. Error : %" E
                                                       Otherwise
                                                            Log "@info Invalid OTP, Please Try Again!"
                                                            uiFeedback.infoMessage = "Invalid OTP, Please Try Again!"
                                             uiFeedback.errorMessage = "You have reached the maximun email OTP verification"
                                             // Email OTP verification loop completed
                                             Log "@info Email OTP verification loop completed"
                                             it_pwbna = {success:false, error: "User update flow reached max attempts. Try later"}
                                             Finish it_pwbna
                                        Otherwise
                                             // Password and Confirm password doesn't match
                                             Log "@trace Password and Confirm password doesn't match"
                                             // Error variable assignment
                                             uiFeedback.errorMessage = "Password and confirm password not matching"
                                   Otherwise
                                        // password policy
                                        uiFeedback.errorMessage = "Password must be at least 6 characters long and contain at least one special character"
                              Otherwise
                                   // User already registered with UID
                                   Log "@info User already registered with uid: %" userName
                                   // User already registered with UID
                                   uiFeedback.errorMessage = "User already registered with this UserName"
                         Otherwise
                              // User already registered with mail
                              Log "@info User already registered with mail: %" email
                              // User already Registered
                              uiFeedback.errorMessage = "User already Registered with this mail"
                    Otherwise
                         // Name should contain only alphabets
                         uiFeedback.errorMessage = "Name should contain only alphabets"
               Otherwise
                    // The maximum number of attempt has been reached.
                    Log "@error Invalid code provided "
                    // Provide feedback to user.
                    uiFeedback.errorMessage = "Invalid code provided."
     Log "@info OTP verification loop completed"
     Log "@info OTP validation failed after 3 attempts"
     it_otpmax = { success: false, error: "ExceededTheNumberOfAttemptsAllowed" }
     Finish it_otpmax
// Maximum attempt reached
Log "@info Maximum attempt reached"
// User Registration flow failed
it_oyycq = {success:false, error: "User registration flow reached max attempts try later"}
Finish it_oyycq